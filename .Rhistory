panel.grid.major.x = element_blank(),
panel.border = element_blank(),
axis.ticks.x = element_blank(),
) +
labs(title = "Relationship between number of songs and listened time
") +
xlab("Number") +
ylab("Hours")
listenedTimes_songs
# Top 15 most listened songs
top_songs <- spotify_data %>%
group_by(trackName) %>%
summarize(hours= sum(minutes)/60) %>%
arrange(desc(hours)) %>%
slice(1:15) %>%
ggplot(aes(x= trackName, y= hours, color= trackName)) +
geom_segment(aes(x= trackName, xend= trackName, y= 0, yend= hours)) +
geom_point(size= 2, color= "darkolivegreen3") +
scale_color_viridis(discrete = TRUE, guide = FALSE, option="D") +
theme_light(base_size=12, base_family="HiraKakuProN-W3") +
theme (
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
axis.ticks.x = element_blank(),
) +
labs(title = "Top 15 listened songs") +
xlab("") +
ylab("Hours") +
coord_flip()
top_songs
# Playback hour
dayHour <- spotify_data %>%
group_by(date, hour = hour(endTime), weekday = wday(date, label = TRUE)) %>%
summarize(hoursListened = sum(minutes)/60)
dayHour %>%
ggplot(aes(x= hour, y= hoursListened, group= date)) +
geom_col(fill = "darkolivegreen3") +
scale_fill_brewer(palette = 3) +
scale_x_continuous(breaks = seq(0, 24, 2)) +
scale_y_continuous(breaks = seq(0, 60, 5)) +
labs(title = "Spotify time during the day", subtitle = "Activity from 0 to 24 hours") +
xlab("Hour of a day") +
ylab("Hours") +
theme_light()
# Playback activity during the week
dayHour %>%
group_by(weekday, hour) %>%
mutate(artistName = iconv(trackName, to = "UTF-8")) %>%
summarize(hours = sum(hoursListened)) %>%
ggplot(aes(x= hour, y= weekday, fill= hours)) +
geom_tile() +
scale_x_continuous(breaks= seq(0, 24, 2)) +
scale_fill_gradient(low= "darkolivegreen1", high= "cyan4") +
labs(title= "Spotify time during the week", subtitle= "Activity from 0 to 24 hours",
x= "Hour", y= "") +
theme_light()
library(readr)
library(DBI)
library(viridis)
library(lubridate)
library(tidyverse)
library(ggplot2)
library(spotifyr)
library(plotly)
library(knitr)
library("gghighlight")
library(jsonlite)
library(readr)
library(DBI)
library(viridis)
library(lubridate)
library(tidyverse)
library(ggplot2)
library(spotifyr)
library(plotly)
library(knitr)
library("gghighlight")
library(jsonlite)
## Add 2 JSON files from Spotify data
stream00 <- fromJSON("/Users/joypham/LearningData/LearningR/my_spotify/MyData/StreamingHistory0.json", flatten = TRUE)
stream01 <- fromJSON("/Users/joypham/LearningData/LearningR/my_spotify/MyData/StreamingHistory1.json", flatten = TRUE)
## Merge 2 file into 1 complete file
my_spotify <- rbind(stream00, stream01)
str(my_spotify)
# Adding date and hour
spotify_data <- my_spotify %>%
as_tibble() %>%
mutate_at("endTime", ymd_hm) %>%
mutate(endTime = endTime - hours(6)) %>%
mutate(date = floor_date(endTime, "day") %>% as_date, seconds = msPlayed / 1000, minutes = seconds / 60)
# Playback hours per week
stream_in_hours <- spotify_data %>%
group_by(date = floor_date(date, "week")) %>%
summarize(hours = sum(minutes)/60) %>%
arrange(date) %>%
ggplot(aes(x = date, y = hours)) +
geom_col(aes(fill = hours)) +
scale_x_date(date_labels = "%b %Y", date_breaks= "2 month") +
scale_fill_gradient(low = "cyan", high = "deepskyblue4") +
labs(title = "Playback hours per week") +
xlab("") +
theme_light()
stream_in_hours
## Playback per specific artists: Taylor Swift and Ed Sheeran
taylor_ed <- spotify_data %>%
group_by(artistName, date = floor_date(date, "month")) %>%
summarize(hours = sum(minutes)/60) %>%
ggplot(aes(x= date, y= hours, group = artistName, color = artistName)) +
geom_line() +
gghighlight(artistName == "Taylor Swift" ||
artistName == "Ed Sheeran") +
scale_x_date(date_labels = "%b %Y", date_breaks = "2 month") +
scale_color_manual(values = c("darkorange2", "maroon")) +
labs(title = "Playback hours per artist", subtitle = "Taylor Swift vs. Ed Sheeran") +
xlab("") +
theme_light()
taylor_ed
# Playback per specific artists: J-Pop
jpop_artist <- spotify_data %>%
group_by(artistName, date = floor_date(date, "hour")) %>%
mutate(artistName = iconv(artistName, to = "UTF-8")) %>%
filter(artistName == "YOASOBI" ||
artistName == "Official HIGE DANdism" ||
artistName == "ヨルシカ" ||
artistName == "Kenshi Yonezu" ||
artistName == "優里" ||
artistName == "ONE OK ROCK" ||
artistName == "Aimer" ||
artistName == "RADWIMPS") %>%
summarize(hours = sum(minutes)/60) %>%
ggplot(aes(x= artistName, y = hours)) +
geom_col(aes(fill = artistName))+
scale_fill_viridis(discrete = TRUE,guide = FALSE, option="D") +
labs(title = "Playback per artist: JPop") +
theme_light(base_size=12, base_family="HiraKakuProN-W3") +
xlab("") +
coord_flip()
jpop_artist
# Track count per artist: JPop
jpop_artist_count <- spotify_data %>%
group_by(artistName, trackName) %>%
mutate(artistName = iconv(artistName, to = "UTF-8")) %>%
filter(artistName == "YOASOBI" ||
artistName == "Official HIGE DANdism" ||
artistName == "ヨルシカ" ||
artistName == "Kenshi Yonezu" ||
artistName == "優里" ||
artistName == "ONE OK ROCK" ||
artistName == "Aimer" ||
artistName == "RADWIMPS") %>%
summarize(trackCount = n_distinct(trackName)) %>%
ggplot(aes(x= artistName, y = trackCount)) +
geom_col(aes(fill = artistName))+
scale_fill_viridis(discrete = TRUE,guide = FALSE, option="D") +
labs(title = "Track count per artist: JPop") +
theme_light(base_size=12, base_family="HiraKakuProN-W3") +
xlab("") +
ylab("Track count") +
coord_flip()
jpop_artist_count
most_listened <- spotify_data %>%
group_by(artistName) %>%
mutate(artistName = iconv(artistName, to = "UTF-8")) %>%
summarize(listenedHours = sum(minutes)/60) %>%
arrange(desc(listenedHours)) %>%
slice(1:15) %>%
ggplot(aes(x = artistName, y = listenedHours,
color = artistName)) +
geom_segment(aes(x= artistName, xend= artistName,
y= 0, yend = listenedHours)) +
geom_point(size = 2, color = "cyan3") +
scale_color_viridis(discrete = TRUE, guide = FALSE, option="C") +
theme_light(base_size=12, base_family="HiraKakuProN-W3") +
theme (
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
axis.ticks.x = element_blank(),
) +
labs(title = "Top 15 most listened artists") +
xlab("") +
ylab("Hours") +
coord_flip()
most_listened
most_songs <- spotify_data %>%
group_by(artistName) %>%
mutate(artistName, iconv(artistName, to = "UTF-8")) %>%
summarize(total_songs = n_distinct(trackName)) %>%
arrange(desc(total_songs)) %>%
slice(1:15) %>%
ggplot(aes(x= artistName, y= total_songs, color= artistName)) +
geom_segment(aes(x= artistName, xend= artistName, y= 0, yend= total_songs)) +
geom_point(size= 2, color= "maroon") +
scale_color_viridis(discrete = TRUE, guide = FALSE, option="E") +
theme_light(base_size=12, base_family="HiraKakuProN-W3") +
theme (
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
axis.ticks.x = element_blank(),
) +
labs(title = "Top 15 artists with most songs") +
xlab("") +
ylab("Hours") +
coord_flip()
most_songs
# Listened time vs. number of songs
listenedTimes_songs <- spotify_data %>%
group_by(artistName) %>%
mutate(artistName = iconv(artistName, to = "UTF-8")) %>%
summarize(listenedHours = sum(minutes)/60, total_songs= n_distinct(trackName)) %>%
arrange(desc(listenedHours, total_songs)) %>%
slice(1:15) %>%
ggplot(aes(x = total_songs, y = listenedHours,color = artistName)) +
geom_point(size = 3, shape = 21 ) +
scale_color_viridis(discrete = TRUE, option="C") +
theme_light(base_size=12, base_family="HiraKakuProN-W3") +
theme (
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
axis.ticks.x = element_blank(),
) +
labs(title = "Relationship between number of songs and listened time
") +
xlab("Number") +
ylab("Hours")
listenedTimes_songs
# Top 15 most listened songs
top_songs <- spotify_data %>%
group_by(trackName) %>%
summarize(hours= sum(minutes)/60) %>%
arrange(desc(hours)) %>%
slice(1:15) %>%
ggplot(aes(x= trackName, y= hours, color= trackName)) +
geom_segment(aes(x= trackName, xend= trackName, y= 0, yend= hours)) +
geom_point(size= 2, color= "darkolivegreen3") +
scale_color_viridis(discrete = TRUE, guide = FALSE, option="D") +
theme_light(base_size=12, base_family="HiraKakuProN-W3") +
theme (
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
axis.ticks.x = element_blank(),
) +
labs(title = "Top 15 listened songs") +
xlab("") +
ylab("Hours") +
coord_flip()
top_songs
# Playback hour
dayHour <- spotify_data %>%
group_by(date, hour = hour(endTime), weekday = wday(date, label = TRUE)) %>%
summarize(hoursListened = sum(minutes)/60)
dayHour %>%
ggplot(aes(x= hour, y= hoursListened, group= date)) +
geom_col(fill = "darkolivegreen3") +
scale_fill_brewer(palette = 3) +
scale_x_continuous(breaks = seq(0, 24, 2)) +
scale_y_continuous(breaks = seq(0, 60, 5)) +
labs(title = "Spotify time during the day", subtitle = "Activity from 0 to 24 hours") +
xlab("Hour of a day") +
ylab("Hours") +
theme_light()
# Playback activity during the week
dayHour %>%
group_by(weekday, hour) %>%
mutate(artistName = iconv(trackName, to = "UTF-8")) %>%
summarize(hours = sum(hoursListened)) %>%
ggplot(aes(x= hour, y= weekday, fill= hours)) +
geom_tile() +
scale_x_continuous(breaks= seq(0, 24, 2)) +
scale_fill_gradient(low= "darkolivegreen1", high= "cyan4") +
labs(title= "Spotify time during the week", subtitle= "Activity from 0 to 24 hours",
x= "Hour", y= "") +
theme_light()
# Playback activity during the week
dayHour %>%
group_by(weekday, hour) %>%
summarize(hours = sum(hoursListened)) %>%
ggplot(aes(x= hour, y= weekday, fill= hours)) +
geom_tile() +
scale_x_continuous(breaks= seq(0, 24, 2)) +
scale_fill_gradient(low= "darkolivegreen1", high= "cyan4") +
labs(title= "Spotify time during the week", subtitle= "Activity from 0 to 24 hours",
x= "Hour", y= "") +
theme_light()
library(readr)
library(DBI)
library(viridis)
library(lubridate)
library(tidyverse)
library(ggplot2)
library(spotifyr)
library(plotly)
library(knitr)
library("gghighlight")
library(jsonlite)
## Add 2 JSON files from Spotify data
stream00 <- fromJSON("/Users/joypham/LearningData/LearningR/my_spotify/MyData/StreamingHistory0.json", flatten = TRUE)
stream01 <- fromJSON("/Users/joypham/LearningData/LearningR/my_spotify/MyData/StreamingHistory1.json", flatten = TRUE)
## Merge 2 file into 1 complete file
my_spotify <- rbind(stream00, stream01)
str(my_spotify)
# Adding date and hour
spotify_data <- my_spotify %>%
as_tibble() %>%
mutate_at("endTime", ymd_hm) %>%
mutate(endTime = endTime - hours(6)) %>%
mutate(date = floor_date(endTime, "day") %>% as_date, seconds = msPlayed / 1000, minutes = seconds / 60)
# Playback hours per week
stream_in_hours <- spotify_data %>%
group_by(date = floor_date(date, "week")) %>%
summarize(hours = sum(minutes)/60) %>%
arrange(date) %>%
ggplot(aes(x = date, y = hours)) +
geom_col(aes(fill = hours)) +
scale_x_date(date_labels = "%b %Y", date_breaks= "2 month") +
scale_fill_gradient(low = "cyan", high = "deepskyblue4") +
labs(title = "Playback hours per week") +
xlab("") +
theme_light()
stream_in_hours
## Playback per specific artists: Taylor Swift and Ed Sheeran
taylor_ed <- spotify_data %>%
group_by(artistName, date = floor_date(date, "month")) %>%
summarize(hours = sum(minutes)/60) %>%
ggplot(aes(x= date, y= hours, group = artistName, color = artistName)) +
geom_line() +
gghighlight(artistName == "Taylor Swift" ||
artistName == "Ed Sheeran") +
scale_x_date(date_labels = "%b %Y", date_breaks = "2 month") +
scale_color_manual(values = c("darkorange2", "maroon")) +
labs(title = "Playback hours per artist", subtitle = "Taylor Swift vs. Ed Sheeran") +
xlab("") +
theme_light()
taylor_ed
# Playback per specific artists: J-Pop
jpop_artist <- spotify_data %>%
group_by(artistName, date = floor_date(date, "hour")) %>%
mutate(artistName = iconv(artistName, to = "UTF-8")) %>%
filter(artistName == "YOASOBI" ||
artistName == "Official HIGE DANdism" ||
artistName == "ヨルシカ" ||
artistName == "Kenshi Yonezu" ||
artistName == "優里" ||
artistName == "ONE OK ROCK" ||
artistName == "Aimer" ||
artistName == "RADWIMPS") %>%
summarize(hours = sum(minutes)/60) %>%
ggplot(aes(x= artistName, y = hours)) +
geom_col(aes(fill = artistName))+
scale_fill_viridis(discrete = TRUE,guide = FALSE, option="D") +
labs(title = "Playback per artist: JPop") +
theme_light(base_size=12, base_family="HiraKakuProN-W3") +
xlab("") +
coord_flip()
jpop_artist
# Track count per artist: JPop
jpop_artist_count <- spotify_data %>%
group_by(artistName, trackName) %>%
mutate(artistName = iconv(artistName, to = "UTF-8")) %>%
filter(artistName == "YOASOBI" ||
artistName == "Official HIGE DANdism" ||
artistName == "ヨルシカ" ||
artistName == "Kenshi Yonezu" ||
artistName == "優里" ||
artistName == "ONE OK ROCK" ||
artistName == "Aimer" ||
artistName == "RADWIMPS") %>%
summarize(trackCount = n_distinct(trackName)) %>%
ggplot(aes(x= artistName, y = trackCount)) +
geom_col(aes(fill = artistName))+
scale_fill_viridis(discrete = TRUE,guide = FALSE, option="D") +
labs(title = "Track count per artist: JPop") +
theme_light(base_size=12, base_family="HiraKakuProN-W3") +
xlab("") +
ylab("Track count") +
coord_flip()
jpop_artist_count
most_listened <- spotify_data %>%
group_by(artistName) %>%
mutate(artistName = iconv(artistName, to = "UTF-8")) %>%
summarize(listenedHours = sum(minutes)/60) %>%
arrange(desc(listenedHours)) %>%
slice(1:15) %>%
ggplot(aes(x = artistName, y = listenedHours,
color = artistName)) +
geom_segment(aes(x= artistName, xend= artistName,
y= 0, yend = listenedHours)) +
geom_point(size = 2, color = "cyan3") +
scale_color_viridis(discrete = TRUE, guide = FALSE, option="C") +
theme_light(base_size=12, base_family="HiraKakuProN-W3") +
theme (
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
axis.ticks.x = element_blank(),
) +
labs(title = "Top 15 most listened artists") +
xlab("") +
ylab("Hours") +
coord_flip()
most_listened
most_songs <- spotify_data %>%
group_by(artistName) %>%
mutate(artistName, iconv(artistName, to = "UTF-8")) %>%
summarize(total_songs = n_distinct(trackName)) %>%
arrange(desc(total_songs)) %>%
slice(1:15) %>%
ggplot(aes(x= artistName, y= total_songs, color= artistName)) +
geom_segment(aes(x= artistName, xend= artistName, y= 0, yend= total_songs)) +
geom_point(size= 2, color= "maroon") +
scale_color_viridis(discrete = TRUE, guide = FALSE, option="E") +
theme_light(base_size=12, base_family="HiraKakuProN-W3") +
theme (
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
axis.ticks.x = element_blank(),
) +
labs(title = "Top 15 artists with most songs") +
xlab("") +
ylab("Hours") +
coord_flip()
most_songs
# Listened time vs. number of songs
listenedTimes_songs <- spotify_data %>%
group_by(artistName) %>%
mutate(artistName = iconv(artistName, to = "UTF-8")) %>%
summarize(listenedHours = sum(minutes)/60, total_songs= n_distinct(trackName)) %>%
arrange(desc(listenedHours, total_songs)) %>%
slice(1:15) %>%
ggplot(aes(x = total_songs, y = listenedHours,color = artistName)) +
geom_point(size = 3, shape = 21 ) +
scale_color_viridis(discrete = TRUE, option="C") +
theme_light(base_size=12, base_family="HiraKakuProN-W3") +
theme (
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
axis.ticks.x = element_blank(),
) +
labs(title = "Relationship between number of songs and listened time
") +
xlab("Number") +
ylab("Hours")
listenedTimes_songs
# Top 15 most listened songs
top_songs <- spotify_data %>%
group_by(trackName) %>%
summarize(hours= sum(minutes)/60) %>%
arrange(desc(hours)) %>%
slice(1:15) %>%
ggplot(aes(x= trackName, y= hours, color= trackName)) +
geom_segment(aes(x= trackName, xend= trackName, y= 0, yend= hours)) +
geom_point(size= 2, color= "darkolivegreen3") +
scale_color_viridis(discrete = TRUE, guide = FALSE, option="D") +
theme_light(base_size=12, base_family="HiraKakuProN-W3") +
theme (
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
axis.ticks.x = element_blank(),
) +
labs(title = "Top 15 listened songs") +
xlab("") +
ylab("Hours") +
coord_flip()
top_songs
# Playback hour
dayHour <- spotify_data %>%
group_by(date, hour = hour(endTime), weekday = wday(date, label = TRUE)) %>%
summarize(hoursListened = sum(minutes)/60)
dayHour %>%
ggplot(aes(x= hour, y= hoursListened, group= date)) +
geom_col(fill = "darkolivegreen3") +
scale_fill_brewer(palette = 3) +
scale_x_continuous(breaks = seq(0, 24, 2)) +
scale_y_continuous(breaks = seq(0, 60, 5)) +
labs(title = "Spotify time during the day", subtitle = "Activity from 0 to 24 hours") +
xlab("Hour of a day") +
ylab("Hours") +
theme_light()
# Playback activity during the week
dayHour %>%
group_by(weekday, hour) %>%
summarize(hours = sum(hoursListened)) %>%
ggplot(aes(x= hour, y= weekday, fill= hours)) +
geom_tile() +
scale_x_continuous(breaks= seq(0, 24, 2)) +
scale_fill_gradient(low= "darkolivegreen1", high= "cyan4") +
labs(title= "Spotify time during the week", subtitle= "Activity from 0 to 24 hours",
x= "Hour", y= "") +
theme_light()
weekHour <- dayHour %>%
group_by(weekday, hour) %>%
summarize(hours = sum(hoursListened)) %>%
ggplot(aes(x= hour, y= hours, color= weekday)) +
geom_line() +
scale_color_viridis(discrete= TRUE, option= "D") +
scale_x_continuous(breaks= seq(0, 24, 2)) +
scale_y_continuous(breaks= seq(0, 15, 2)) +
scale_fill_gradient(low= "darkolivegreen1", high= "cyan4") +
labs(title= "Spotify time during the week", subtitle= "Activity from 0 to 24 hours",
x= "Hour", y= "") +
theme_light()
weekHour
Sys.setenv(SPOTIFY_CLIENT_ID = 'c344451380c543e58db878126d4d7ee6')
Sys.setenv(SPOTIFY_CLIENT_SECRET = '526559824c6440f39f93b83c0c939f5d')
access_token <- get_spotify_access_token()
get_my_recently_played(limit = 5) %>%
mutate(
artist.name = map_chr(track.artists, function(x) x$name[1]),
played_at = as_datetime(played_at)
) %>%
select(
all_of(c("track.name", "artist.name", "track.album.name", "played_at"))
) %>%
kable()
